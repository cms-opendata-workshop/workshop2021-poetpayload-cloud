apiVersion: argoproj.io/v1alpha1
kind: Workflow
metadata:
  generateName: poet-test-
spec:
  entrypoint: example
  volumes:
  - name: task-pv-storage
    persistentVolumeClaim:
      claimName: nfs-<NUMBER>

  templates:
  - name: example
    dag:
      tasks:
      - name: scatter-step
        template: scatter-step-template
        arguments:
         parameters:
          - name: file
            value: "{{item.file}}"
          - name: it
            value: "{{item.it}}"
          - name: nevents
            value: "{{item.nevents}}"
        withItems:
          - { nevents: 1, it: '1', file: 'root://eospublic.cern.ch//eos/opendata/cms/Run2012B/DoubleMuParked/AOD/22Jan2013-v1/20000/001E739E-9268-E211-A1E1-00259073E32A.root'}
          - { nevents: 1, it: '2', file: 'root://eospublic.cern.ch//eos/opendata/cms/Run2012B/DoubleMuParked/AOD/22Jan2013-v1/20000/004B3D2B-4767-E211-961A-E0CB4E29C4F1.root'}
      - name: merge-step
        dependencies: [scatter-step]
        template: merge-step-template
      - name: eventloop-analysis-step
        dependencies: [merge-step]
        template: eventloop-analysis-step-template



  - name: scatter-step-template
    inputs:
      parameters:
      - name: it
      - name: file
      - name: nevents
    script:
      image: cmsopendata/cmssw_5_3_32
      command: [bash]
      source: | 
        sudo chown $USER /mnt/vol

        source /opt/cms/entrypoint.sh
        git clone git://github.com/cms-opendata-workshop/workshop2021-poetpayload-cloud.git
        cd workshop2021-poetpayload-cloud
        cd PhysObjectExtractor
        scram b

        mkdir -p /mnt/vol/data
        varfiles="{{inputs.parameters.file}}"
        nevent="{{inputs.parameters.nevents}}"

        sed -i "s,root://eospublic.cern.ch//eos/opendata/cms/Run2012B/DoubleMuParked/AOD/22Jan2013-v1/10000/1EC938EF-ABEC-E211-94E0-90E6BA442F24.root,$varfiles,g" python/poet_cfg_cloud.py
        sed -i "s,int32(200,int32($nevent,g" python/poet_cfg_cloud.py
        
        cmsRun python/poet_cfg_cloud.py True True
        iterator="{{inputs.parameters.it}}"
        mv myoutput.root /mnt/vol/data/myoutput$iterator.root

        #cp condor/merge_jobs.py /mnt/vol/merge_jobs.py

      volumeMounts:
      - name: task-pv-storage
        mountPath: /mnt/vol
      resources:
        limits:
          memory: 2Gi
        requests:
          memory: 1.7Gi
          cpu: 750m
  
  - name: merge-step-template
    script:
      image: rootproject/root:latest
      command: [bash]
      source: | 
        hadd /mnt/vol/myoutput.root mnt/vol/data/myoutput*.root
        rm -rf /mnt/vol/data
        # cd /mnt
        # python3 /mnt/data/merge_jobs.py /mnt/data    
      volumeMounts:
      - name: task-pv-storage
        mountPath: /mnt/vol
      resources:
        limits:
          memory: 2Gi
        requests:
          memory: 1.7Gi
          cpu: 750m

  - name: eventloop-analysis-step-template
    script:
      image: nooraangelva/cmssw:10_6_12-argo-v2
      command: [bash]
      source: | 
        sudo chown $USER /mnt/vol

        source /opt/cms/cmsset_default.sh
        cd $HOME/CMSSW_10_6_12/src
        eval `scramv1 runtime -sh`

        git clone https://github.com/cms-legacydata-analyses/PhysObjectExtractorTool.git
        cd PhysObjectExtractorTool
        cd PhysObjectExtractor
        cd test
        \cp -r /mnt/vol/myoutput.root ./
        g++ -g -O3 -Wall -Wextra -o EventLoopAnalysis EventLoopAnalysisTemplate.cxx $(root-config --cflags --libs)
        ./EventLoopAnalysis
        
        rm /mnt/vol/myoutput.root
        mv histograms.root /mnt/vol/histograms.root


      volumeMounts:
      - name: task-pv-storage
        mountPath: /mnt/vol
      resources:
        limits:
          memory: 2Gi
        requests:
          memory: 1.7Gi
          cpu: 750m


  


